### YamlMime:ManagedReference
items:
- uid: ThomasonAlgorithm.Core.Models.Gap
  commentId: T:ThomasonAlgorithm.Core.Models.Gap
  id: Gap
  parent: ThomasonAlgorithm.Core.Models
  children:
  - ThomasonAlgorithm.Core.Models.Gap.#ctor(System.Int32,System.Int32)
  - ThomasonAlgorithm.Core.Models.Gap.LeftBound
  - ThomasonAlgorithm.Core.Models.Gap.RightBound
  langs:
  - csharp
  - vb
  name: Gap
  nameWithType: Gap
  fullName: ThomasonAlgorithm.Core.Models.Gap
  type: Class
  source:
    remote:
      path: src/ThomasonAlgorithm.Core/Models/Gap.cs
      branch: second-release
      repo: https://github.com/DmitriiGoro/Thomason_algorithm_lollipop.git
    id: Gap
    path: ../src/ThomasonAlgorithm.Core/Models/Gap.cs
    startLine: 8
  assemblies:
  - ThomasonAlgorithm.Core
  namespace: ThomasonAlgorithm.Core.Models
  summary: >-
    Represents a range (gap) of integer values with a specified lower and upper bound.

    This is used to define a range of chord lengths to exclude or consider in graph generation.
  example: []
  syntax:
    content: 'public sealed record Gap : IEquatable<Gap>'
    content.vb: Public NotInheritable Class Gap Implements IEquatable(Of Gap)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{ThomasonAlgorithm.Core.Models.Gap}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ThomasonAlgorithm.Core.Models.Gap.#ctor(System.Int32,System.Int32)
  commentId: M:ThomasonAlgorithm.Core.Models.Gap.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: ThomasonAlgorithm.Core.Models.Gap
  langs:
  - csharp
  - vb
  name: Gap(int, int)
  nameWithType: Gap.Gap(int, int)
  fullName: ThomasonAlgorithm.Core.Models.Gap.Gap(int, int)
  type: Constructor
  source:
    remote:
      path: src/ThomasonAlgorithm.Core/Models/Gap.cs
      branch: second-release
      repo: https://github.com/DmitriiGoro/Thomason_algorithm_lollipop.git
    id: .ctor
    path: ../src/ThomasonAlgorithm.Core/Models/Gap.cs
    startLine: 8
  assemblies:
  - ThomasonAlgorithm.Core
  namespace: ThomasonAlgorithm.Core.Models
  summary: >-
    Represents a range (gap) of integer values with a specified lower and upper bound.

    This is used to define a range of chord lengths to exclude or consider in graph generation.
  example: []
  syntax:
    content: public Gap(int LeftBound, int RightBound)
    parameters:
    - id: LeftBound
      type: System.Int32
      description: The inclusive lower bound of the gap range.
    - id: RightBound
      type: System.Int32
      description: The inclusive upper bound of the gap range.
    content.vb: Public Sub New(LeftBound As Integer, RightBound As Integer)
  overload: ThomasonAlgorithm.Core.Models.Gap.#ctor*
  nameWithType.vb: Gap.New(Integer, Integer)
  fullName.vb: ThomasonAlgorithm.Core.Models.Gap.New(Integer, Integer)
  name.vb: New(Integer, Integer)
- uid: ThomasonAlgorithm.Core.Models.Gap.LeftBound
  commentId: P:ThomasonAlgorithm.Core.Models.Gap.LeftBound
  id: LeftBound
  parent: ThomasonAlgorithm.Core.Models.Gap
  langs:
  - csharp
  - vb
  name: LeftBound
  nameWithType: Gap.LeftBound
  fullName: ThomasonAlgorithm.Core.Models.Gap.LeftBound
  type: Property
  source:
    remote:
      path: src/ThomasonAlgorithm.Core/Models/Gap.cs
      branch: second-release
      repo: https://github.com/DmitriiGoro/Thomason_algorithm_lollipop.git
    id: LeftBound
    path: ../src/ThomasonAlgorithm.Core/Models/Gap.cs
    startLine: 8
  assemblies:
  - ThomasonAlgorithm.Core
  namespace: ThomasonAlgorithm.Core.Models
  summary: The inclusive lower bound of the gap range.
  example: []
  syntax:
    content: public int LeftBound { get; init; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LeftBound As Integer
  overload: ThomasonAlgorithm.Core.Models.Gap.LeftBound*
- uid: ThomasonAlgorithm.Core.Models.Gap.RightBound
  commentId: P:ThomasonAlgorithm.Core.Models.Gap.RightBound
  id: RightBound
  parent: ThomasonAlgorithm.Core.Models.Gap
  langs:
  - csharp
  - vb
  name: RightBound
  nameWithType: Gap.RightBound
  fullName: ThomasonAlgorithm.Core.Models.Gap.RightBound
  type: Property
  source:
    remote:
      path: src/ThomasonAlgorithm.Core/Models/Gap.cs
      branch: second-release
      repo: https://github.com/DmitriiGoro/Thomason_algorithm_lollipop.git
    id: RightBound
    path: ../src/ThomasonAlgorithm.Core/Models/Gap.cs
    startLine: 8
  assemblies:
  - ThomasonAlgorithm.Core
  namespace: ThomasonAlgorithm.Core.Models
  summary: The inclusive upper bound of the gap range.
  example: []
  syntax:
    content: public int RightBound { get; init; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RightBound As Integer
  overload: ThomasonAlgorithm.Core.Models.Gap.RightBound*
references:
- uid: ThomasonAlgorithm.Core.Models
  commentId: N:ThomasonAlgorithm.Core.Models
  href: ThomasonAlgorithm.html
  name: ThomasonAlgorithm.Core.Models
  nameWithType: ThomasonAlgorithm.Core.Models
  fullName: ThomasonAlgorithm.Core.Models
  spec.csharp:
  - uid: ThomasonAlgorithm
    name: ThomasonAlgorithm
    href: ThomasonAlgorithm.html
  - name: .
  - uid: ThomasonAlgorithm.Core
    name: Core
    href: ThomasonAlgorithm.Core.html
  - name: .
  - uid: ThomasonAlgorithm.Core.Models
    name: Models
    href: ThomasonAlgorithm.Core.Models.html
  spec.vb:
  - uid: ThomasonAlgorithm
    name: ThomasonAlgorithm
    href: ThomasonAlgorithm.html
  - name: .
  - uid: ThomasonAlgorithm.Core
    name: Core
    href: ThomasonAlgorithm.Core.html
  - name: .
  - uid: ThomasonAlgorithm.Core.Models
    name: Models
    href: ThomasonAlgorithm.Core.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{ThomasonAlgorithm.Core.Models.Gap}
  commentId: T:System.IEquatable{ThomasonAlgorithm.Core.Models.Gap}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Gap>
  nameWithType: IEquatable<Gap>
  fullName: System.IEquatable<ThomasonAlgorithm.Core.Models.Gap>
  nameWithType.vb: IEquatable(Of Gap)
  fullName.vb: System.IEquatable(Of ThomasonAlgorithm.Core.Models.Gap)
  name.vb: IEquatable(Of Gap)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ThomasonAlgorithm.Core.Models.Gap
    name: Gap
    href: ThomasonAlgorithm.Core.Models.Gap.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ThomasonAlgorithm.Core.Models.Gap
    name: Gap
    href: ThomasonAlgorithm.Core.Models.Gap.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ThomasonAlgorithm.Core.Models.Gap.#ctor*
  commentId: Overload:ThomasonAlgorithm.Core.Models.Gap.#ctor
  href: ThomasonAlgorithm.Core.Models.Gap.html#ThomasonAlgorithm_Core_Models_Gap__ctor_System_Int32_System_Int32_
  name: Gap
  nameWithType: Gap.Gap
  fullName: ThomasonAlgorithm.Core.Models.Gap.Gap
  nameWithType.vb: Gap.New
  fullName.vb: ThomasonAlgorithm.Core.Models.Gap.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ThomasonAlgorithm.Core.Models.Gap.LeftBound*
  commentId: Overload:ThomasonAlgorithm.Core.Models.Gap.LeftBound
  href: ThomasonAlgorithm.Core.Models.Gap.html#ThomasonAlgorithm_Core_Models_Gap_LeftBound
  name: LeftBound
  nameWithType: Gap.LeftBound
  fullName: ThomasonAlgorithm.Core.Models.Gap.LeftBound
- uid: ThomasonAlgorithm.Core.Models.Gap.RightBound*
  commentId: Overload:ThomasonAlgorithm.Core.Models.Gap.RightBound
  href: ThomasonAlgorithm.Core.Models.Gap.html#ThomasonAlgorithm_Core_Models_Gap_RightBound
  name: RightBound
  nameWithType: Gap.RightBound
  fullName: ThomasonAlgorithm.Core.Models.Gap.RightBound
